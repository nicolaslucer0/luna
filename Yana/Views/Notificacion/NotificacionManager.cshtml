@using Yana.Enums
@model Yana.Models.WrapperEntities.NotificacionWrapper

@{
    ViewData["Title"] = "NotificacionManager";
    Layout = "~/Views/Shared/_LoggedLayout.cshtml";
}

<!-- Css Notificaciones -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.css" rel="stylesheet" />
<link rel="stylesheet" href="~/css/main.css">
<link rel="stylesheet" href="~/css/site.css">
<link rel="stylesheet" href="~/css/notificaciones/bootstrap-datetimepicker.css">
<link rel="stylesheet" href="~/css/siteLoggedLayout.css">
<!-- Js Notificaciones -->

<script src="~/js/notificaciones/bootstrap.min.js"></script>
<script src="~/js/notificaciones/moment-v2.18.1.js"></script>
<script src="~/js/notificaciones/bootstrap-datetimepicker.min.js"></script>

<script>
    const respuestas = [];

    function PostForm() {
        if (!IsValid())
            return false;
        try {
            const postData = JSON.stringify(respuestas);
            $('#txSerializedOpciones').val(postData);
            let formi = document.forms["frmNotificacion"];
            debugger;
            document.forms["frmNotificacion"].submit();
        } catch (err) {
            alert(err.Description);
        }
    }

    function AddOpcion() {
        if (!$('#DescripcionOpcion').val())
            return;
        $("#option-table").show();
        if (!respuestas.find(p => p.descripcionOpcion == $('#DescripcionOpcion').val())) {
            respuestas.push({
                descripcionOpcion: $('#DescripcionOpcion').val()
            });
            if (!$('#option-table-header').text()) {
                $("#option-table").append(`
                    <thead id="option-table-header">
                        <tr>
                            <th style="font-family: 'poppinsbold'" scope="col">Opcion agregada</th>
                        </tr>
                    </thead>
                    `);
                $("#option-table").append(
                    `<tbody id="option-table-body">
                        <tr style="font-size: 12px" id="${$('#DescripcionOpcion').val()}">
                            <td>${$('#DescripcionOpcion').val()}</td>
                        </tr>
                    </tbody>`
                );
            } else {
                $("#option-table-body").append(`
                        <tr style="font-size: 12px" id="${$('#DescripcionOpcion').val()}">
                            <td>${$('#DescripcionOpcion').val()}</td>
                        </tr>`);
            }

        } else {
            alert("Descripcion ya agregada");
        }
    }

    function DelOpcion() {
        if (respuestas.find(p => p.descripcionOpcion == $('#DescripcionOpcion').val())) {
            respuestas.splice(respuestas.findIndex(p => p.descripcionOpcion == $('#DescripcionOpcion').val()), 1);
            $(`#${$('#DescripcionOpcion').val()}`).remove();
            if (respuestas.length == 0)
                $("#option-table").hide();
        }
    }


    function IsValid() {
        HideDivMessageP();

        var field;
        field = $("#Mensaje").val();
        if (field.length == 0) {
            $("#lblErrorP").text("Debe completar todos los campos de requeridos para crear una notificación.");
            ShowDivMessageP();
            return false;
        }

        var tipoNotificacion = @Model.IdNotificacion;

        if (parseInt(tipoNotificacion) == -1) {
            //04:00 AM - 11:59 AM
            var hhM = $("#HoraM").val().split(":")[0];
            var adM = $("#HoraM").val().split(":")[1].split(" ")[1].trim();

            if (adM == "PM" || (parseInt(hhM) < 4 || parseInt(hhM) > 11)) {
                $("#lblErrorP").text("El horario de la mañana debe ser entre las 04:00 AM y las 11:59 AM");
                ShowDivMessageP();
                return false;
            }

            //12:00 PM - 07:59 PM
            var hhT = $("#HoraT").val().split(":")[0];
            var adT = $("#HoraT").val().split(":")[1].split(" ")[1].trim();

            if (adT == "AM" || (parseInt(hhT) != 12 && (parseInt(hhT) < 1 || parseInt(hhT) > 7))) {
                $("#lblErrorP").text("El horario de la tarde debe ser entre las 12:00 PM y las 07:59 PM");
                ShowDivMessageP();
                return false;
            }

            //08:00 PM - 03:59 AM
            var hhN = $("#HoraN").val().split(":")[0];
            var adN = $("#HoraN").val().split(":")[1].split(" ")[1].trim();

            if ((adN == "AM" && parseInt(hhN) > 3) || (adN == "PM" && (parseInt(hhN) < 8 || parseInt(hhN) > 11))) {
                $("#lblErrorP").text("El horario de la noche debe ser entre las 08:00 PM y las 03:59 AM");
                ShowDivMessageP();
                return false;
            }
        }

        return true;
    }



    function ShowDivMessageP() {
        scroll(0, 0);
        $("#divMessagesP").show("slow", function () { });
    }

    function HideDivMessageP() {
        $("#divMessagesP").hide();
    }

    function ShowDivMessageW() {
        scroll(0, 0);
        $("#divMessagesW").show("slow", function () { });
    }

    function HideDivMessageW() {
        $("#divMessagesW").hide();
    }

    function EliminarNotificacion() {

        var idNotificacion = @Model.IdNotificacion;

        $.ajax({
            type: "POST",
            url: '@Url.Action("DeleteNotificacion", "Notificacion")',
            data: { idNotificacion: idNotificacion },
            contentType: 'application/x-www-form-urlencoded',
            success: function (data) {
                $("#lblError").text(data.errorMessage);
                if (data.errorMessage.length > 0) {
                    ShowDivMessageP();
                }
                else {
                    window.location.assign('@Url.Action("NotificacionList", "Notificacion")');
                }
            },
            failure: function (data) {
                alert("failure");
            }
        });
    }

    $(document).ready(function () {
        if ($("#lblErrorP").text().length > 0)
            ShowDivMessageP();

        if ($("#lblWarning").text().length > 0)
            ShowDivMessageW();
  
        if ($("#lblErrorP").text().length > 0)
            ShowDivMessageP();

        var decodeErrorMessage = function (jqXHR, textStatus, errorThrown) {
            var html, errorInfo, i, errorText = textStatus + '\n' + errorThrown;
            if (jqXHR.responseText.charAt(0) === '[') {
                try {
                    errorInfo = $.parseJSON(jqXHR.responseText);
                    errorText = "";
                    for (i = 0; i < errorInfo.length; i++) {
                        if (errorText.length !== 0) {
                            errorText += "<hr/>";
                        }
                        errorText += errorInfo[i].Source + ": " + errorInfo[i].Message;
                    }
                } catch (e) {
                }
            } else {
                html = /<body.*?>([\s\S]*)<\/body>/i.exec(jqXHR.responseText);
                if (html !== null && html.length > 1) {
                    errorText = html[1];
                }
            }
            return errorText;
        };

        $.get('@Url.Action("GetOpcionesByIdNotificacion", "Notificacion", new { idNotificacion = @Model.IdNotificacion })', function (data) {
            let registros = data.opciones;

            if (registros == null || registros.length == 0) {
                return;
            }

            let headers = `
                        <thead>
                            <tr>
                                    <th style="font-family: 'poppinsbold'" scope="col">idNotificacionOpcion</th>
                                <th style="font-family: 'poppinsbold'" scope="col">descripcionOpcion</th>
                            </tr>
                        </thead>
                    `;
            let rows = '<tbody>';
            registros.forEach(r => {
                rows += `<tr style="font-size: 12px">
                                    <td>${r.idNotificacionOpcion}</td>
                                    <td>${r.descripcionOpcion}</td>
                                </tr>`
            });
            rows += `</tbody>`;
            $('#jqOpciones').append(headers);
            $('#jqOpciones').append(rows);
        });
    });


</script>

<!-- Modal Delete-->
<div class="modal fade" id="deleteModal" tabindex="-1" data-backdrop="false" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Eliminar Notificación</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="text-align: left;">
                ¿Seguro que desea eliminar?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn yanaButtonGrey" data-dismiss="modal"><i class='fa fa-undo fa-lg'></i>Cancelar</button>
                <button type="button" class="btn yanaButton" onclick="EliminarNotificacion();"><i class='fa fa-check-square fa-lg'></i>Eliminar</button>
            </div>
        </div>
    </div>
</div>

<div class="container dashboard-content" style="width: 90%;">
    <div id="page-wrapper">
        <div class="row">
        <div class="col-lg-12">
                    <div class="panel-heading">
                        @{
                            string titulo = Model.IdNotificacion <= 0 ? "Nueva Notificación" : "Editar Notificación";
                        }
                        @titulo
                    </div>
                    <div id="divMessagesP" class="ui-corner-all" style="display: none;">
                        <p align="left">
                            <div class="alert alert-danger" style="text-align: left;">
                                <label id="lblErrorP" style="font-size: 12px; color: firebrick; font-weight: bold; margin-left: 5px;">@TempData["messageERROR"]</label>
                            </div>
                        </p>
                    </div>
                    <div id="divMessagesW" class="ui-corner-all" style="display: none;">
                        <p align="left">
                            <div class="alert alert-warning" style="text-align: left;">
                                <label id="lblWarning" style="font-size: 12px; color: firebrick; font-weight: bold; margin-left: 5px;">@TempData["messageWARNING"]</label>
                            </div>
                        </p>
                    </div>

                    <div class="panel-body" id="divPanelBody">
                        @using (Html.BeginForm("NotificacionManager", "Notificacion", Model, FormMethod.Post, false, new { id = "frmNotificacion" }))
                        {
                            <input id="IdNotificacion" name="IdNotificacion" value="@Model.IdNotificacion" style="display:none;" />
                            <input id="IdPaciente" name="IdPaciente" value="@Model.IdPaciente" style="display:none;" />
                            <input id="IdEstadoNotificacion" name="IdEstadoNotificacion" value="@Model.IdEstadoNotificacion" style="display:none;" />
                            @Html.HiddenFor(u => u.SerializedOpciones, new { id = "txSerializedOpciones" })

                            string habilitar = Model.IdNotificacion == -1 ? "disabled" : "";

                            <div class="form-group" style="text-align: left; margin-top: 0">
                                <label for="message">Mensaje:</label>
                                <textarea id="Mensaje" required="required" class="form-control" name="Mensaje" id="Mensaje" @habilitar data-parsley-trigger="keyup" data-parsley-minlength="20" data-parsley-maxlength="100" data-parsley-minlength-message="Come on! You need to enter at least a 20 caracters long comment.." data-parsley-validation-threshold="10">@Model.Mensaje</textarea>
                            </div>

                            <div class="row">
                                <div class="col-md-3">
                                    <label>Desde:</label>
                                    <div class="form-group" style="width: 100%">
                                        <div class='input-group date' id='datetimepicker0'>
                                            <input type='text' class="form-control" required name="FechaDesde" id="FechaDesde" value="@Model.FechaDesde" />
                                            <span class="input-group-addon">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                            </span>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <label>Definir Hora:</label>
                                    <div class="form-group" style="width: 100%">
                                        <div class='input-group date' id='datetimepicker1'>
                                            <input type='text' class="form-control" required name="Hora" id="Hora" value="@Model.Hora" />
                                            <span class="input-group-addon">
                                                <span class="glyphicon glyphicon-time"></span>
                                            </span>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <label>Cant. Dias:</label>
                                    <input type="number" class="form-control" value="@Model.CantDias" min="1" max="7" step="1" name="CantDias" />
                                </div>
                                <div class="col-md-3">
                                    <label>Periodicidad Horas:</label>
                                    <input type="number" class="form-control" value="@Model.CadaXhoras" min="0" max="24" step="1" name="CadaXhoras" />
                                </div>
                            </div>

                            <div class="form-inline" style="text-align: left; vertical-align: middle; height: auto; ">
                                <div class="form-group" style="text-align: left;">
                                    <label>Opción</label>
                                </div>
                                <input class="form-control" @habilitar placeholder="" id="DescripcionOpcion" name="DescripcionOpcion" type="text" autofocus>
                                <button type="button" class="btn btn-success" @habilitar title="Agregar Opción" onclick="AddOpcion(); return false;">
                                    <span class='fa fa-plus fa-lg'></span>
                                </button>
                                <button type="button" class="btn btn-danger" @habilitar title="Eliminar Opción" onclick="DelOpcion(); return false;">
                                    <span class='fa fa-trash fa-lg'></span>
                                </button>
                            </div>
                            
                            <div class="row">
                                <div class="col-md-12">
                                    <table id="option-table" class="table" cellpadding="0" cellspacing="0" style="margin: 4em 0;"></table>
                                </div>
                            </div>
                            
                            <div class="row" align="right">
                                <div class="col-md-4 col-sm-12">
                                    <button onclick="window.location.assign('@Url.Action("NotificacionList", "Notificacion", new { idPaciente = Model.IdPaciente })'); return false;" class="btn yanaButton"><i class='fa fa-undo fa-lg'></i>Volver</button>    
                                </div>
                                <div class="col-md-4 col-sm-12">
                                    <button onclick="PostForm();return false;" class="btn yanaButton"><i class='fa fa-save fa-lg'></i>Guardar</button>
                                </div>
                            </div>
                        }

                    </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        $('#datetimepicker0').datetimepicker({
            format: 'DD/MM/YYYY',
            minDate: new Date()
        });
        $('#datetimepicker1').datetimepicker({
            format: 'LT'
        });
    });
</script>

<script src="./src/bootstrap-input-spinner.js"></script>
