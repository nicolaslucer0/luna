@using Yana.Helpers;
@using Yana.Enums;
@{
    Layout = "~/Views/Shared/_LoggedLayout.cshtml";
}
<script src='@Url.Content("~/js/charts.js")' type="text/javascript"></script>
<style>
    .yana-card {
        background: white;
        padding: 20px;
        margin: 10px;
        border: none;
        border-radius: 30px;
        box-shadow: 0 2px 2px 0 #f7f7f7;
        color: black;
    }

    .chart-header {
        margin-bottom: 20px;
        text-align: center;
    }
</style>
<script type="text/javascript">

    $(function () {
        var url1 = '@Url.Action("GetRegistrosDiariosPorPaciente", "Home")';
        $.get(url1, {}, function (data) {
            var categorias = [];
            var series = [];
        });

        
        var url2 = '@Url.Action("GetEmocionesUltimaSemana", "Home")';
            $.get(url2, {}, function (data) {
                console.log("Emociones ultima semana", data);
                var categorias = [];
                var series = [];

                var firstElement = true;

                $.each(data, function (i, obj) {
                    if (firstElement) {
                        $.each(obj['listCategory'], function (i2, category) {
                            categorias.push(category);
                        });

                        firstElement = false;
                    }

                    var dataArray = [];

                    $.each(obj['listValue'], function (i2, obj2) {
                        dataArray.push(obj2);
                    });

                    series.push({
                        name: '' + obj['nameSerie'] + '',
                        color: obj['Color'],
                        data: dataArray
                    });

                });

                bindEmocionesSemana(categorias, series);
            });

        function bindEmocionesSemana(categorias, seriesData) {
            const ctx = $('#emotionsChart');
            const labels = seriesData.map(s => s.name);
            const colors = ["#f08f0077", "#998f9477", "#f0559477", "#558f9477", "#f08f6677", "#f0877477", "#f0888477", "#998f9477", "#f0009477", "#f0811477", "#998f9477", "#f08ee477", "#f08dd477"];
            const datasets = seriesData.map((d, index) => {
                let data = seriesData && seriesData.length > 0 ? seriesData.filter(s => s.name == d.name) : [];
                const dataset = data && data.length > 0 ? data[0].data : [];
                return {
                    label: d.name,
                    data: dataset,
                    backgroundColor: colors[index]
                }
                });
            

            const notificationChart2 = new Chart(ctx, {
                type: 'radar',
                data: {
                    labels: labels,
                    datasets: datasets
                },
                options: {
                    plugins: { legend: { display: false }, },
                    legend: {
                        display: false
                    },
                }
            })
        }

        // DE BARRAS
        var url3 = '@Url.Action("GetRespuestasNotificaciones", "Home")';
        $.get(url3, {}, function (data) {
                var categorias = [];
                var series = [];

                var firstElement = true;

                $.each(data, function (i, obj) {
                    if (firstElement) {
                        $.each(obj['listCategory'], function (i2, category) {
                            categorias.push(category);
                        });

                        firstElement = false;
                    }

                    var dataArray = [];

                    $.each(obj['listValue'], function (i2, obj2) {
                        dataArray.push(obj2);
                    });

                    series.push({
                        name: '' + obj.nameSerie + '',
                        color: obj.Color,
                        data: dataArray
                    });

                });

                bindRespuestaNotificaciones(categorias, series);
            });
        function bindRespuestaNotificaciones(categorias, seriesData) {
            const ctx = $('#myChart')
            const data = seriesData.filter(d => d.name == "Respondidas").map(r => r.data)[0];
            const notificationChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: categorias,
                    datasets: [{
                        label: 'Notificaciones respondidas',
                        data: !!data && data.length > 0 ? data : [],
                        backgroundColor: ["#3661ed", "#3661ed", "#3661ed", "#3661ed", "#3661ed", "#3661ed"],
                        borderRadius: 8
                    }],
                    options: {
                        responsive: true,
                    }   
                }
            })
        }

        // DONITA
        var url4 = '@Url.Action("GetPacientesPorPatologia", "Home")';
        $.get(url4, {}, function (data) {

            var series = [];

            $.each(data, function (i, obj) {
                series.push({
                    name: '' + obj['nameSerie'] + '',
                    y: obj['value'],
                    selected: obj['selected'],
                    sliced: obj['sliced']
                });
            });

            bindPacientesPatologia(series);
        });
        function bindPacientesPatologia(seriesData) {
            const ctx = $('#pathologyChart');
            const labels = seriesData.map(r => r.name);
            const data = seriesData.map(r => r.y);
            const notificationChart2 = new Chart(ctx, {
                type: 'doughnut',
                data: {
                    legend: {
                        display: false
                    },
                    labels: labels,
                    datasets: [{
                        data: data,
                        backgroundColor: ["#3661ed"]
                    }]
                },
                options: {
                    plugins: { legend: { display: false }, },
                    legend: {
                        display: false
                    },
                    cutout: '70%',
                }
            })
        }

        
    });
</script>

<div class="container full" style="width: 100%">

    <div class="panel-heading" style="color: white; font-size: 25px; margin-bottom: 20px;">
        <strong style="font-family: 'poppinsbold'">Hola,</strong> @UserCache.Nombre
    </div>

    <div class="row">
        <div class="col-md-3 yana-card">
            <div class="chart-header">Pacientes por patologia</div>
            <canvas id="pathologyChart" width="100"></canvas>
        </div>
        <div class="col-md-3 yana-card">
            <div class="chart-header">Emociones recibidas</div>
            <canvas id="emotionsChart" width="200" height="200"></canvas>        
        </div>
        <div class="col-md-5">
            <div class="row">
                <div class="col-md-5 yana-card d-flex flex-column align-items-center justify-content-center">
                    <div style="font-size: 12px; margin-bottom: 10px;">Tus pacientes</div>
                    <div style="font-family: 'poppinsbold';">52</div>
                </div>
                <div class="col-md-5 yana-card d-flex flex-column align-items-center justify-content-center">
                    <div style="font-size: 12px;">Pacientes con patologias</div>
                    <div style="font-family: 'poppinsbold';">20</div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-5 yana-card d-flex flex-column align-items-center justify-content-center" style="text-align: center;">
                    <div style="font-size: 12px;">Notificaciones enviadas</div>
                    <div style="font-family: 'poppinsbold';">20</div>
                </div>
                <div class="col-md-5 yana-card d-flex flex-column align-items-center justify-content-center" style="text-align: center;">
                    <div style="font-size: 12px;">Notificaciones recibidas</div>
                    <div style="font-family: 'poppinsbold';">20</div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-5 yana-card d-flex flex-column align-items-center justify-content-center" style="text-align: center;">
                    <div style="font-size: 12px;">Emociones recibidas</div>
                    <div style="font-family: 'poppinsbold';">20</div>
                </div>
                <div class="col-md-5 yana-card d-flex flex-column align-items-center justify-content-center" style="text-align: center;">
                    <div style="font-size: 12px;"></div>
                    <div style="font-family: 'poppinsbold';">20</div>
                </div>
            </div>
        </div>
        
    </div>
</div>

